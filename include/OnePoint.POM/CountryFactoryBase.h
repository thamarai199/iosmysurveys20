// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in Country.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "ICountryData.h"
#import "ICountryFactoryBase.h"

//package OnePoint.POM.Model; 
  

/// <summary>
/// Creates and finds Country objects
/// </summary>



@interface  CountryFactoryBase : DataObjectFactory<ICountryData,ICountryFactoryBase>
{
}

+(NSString*)  FIELD_NAME_COUNTRYID;
+(NSString*)  FIELD_NAME_NAME;
+(NSString*)  FIELD_NAME_COUNTRYCODE;
+(NSString*)  FIELD_NAME_STD;
+(NSString*)  FIELD_NAME_GMT;
+(NSString*)  FIELD_NAME_CREDITRATE;
+(NSString*)  FIELD_NAME_ISDELETED;
+(NSString*) PARAMETER_NAME_COUNTRYID;
+(NSString*) PARAMETER_NAME_NAME;
+(NSString*) PARAMETER_NAME_COUNTRYCODE;
+(NSString*) PARAMETER_NAME_STD;
+(NSString*) PARAMETER_NAME_GMT;
+(NSString*) PARAMETER_NAME_CREDITRATE;
+(NSString*) PARAMETER_NAME_ISDELETED;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyCountryID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyCountryID;
// Define input parameters once only so they can be reused by other methods
-(void) AddCountryIDParameter:(DataHandler *) dataHandler valCountryID:(NSNumber *) valCountryID;	

-(void) AddNameParameter:(DataHandler *) dataHandler valName:(NSString *) valName;	

-(void) AddCountryCodeParameter:(DataHandler *) dataHandler valCountryCode:(NSString *) valCountryCode;	

-(void) AddStdParameter:(DataHandler *) dataHandler valStd:(NSString *) valStd;	

-(void) AddGmtParameter:(DataHandler *) dataHandler valGmt: (NSDate *) valGmt;	

-(void) AddCreditRateParameter:(DataHandler *) dataHandler valCreditRate:(NSNumber *) valCreditRate;	

-(void) AddIsDeletedParameter:(DataHandler *) dataHandler valIsDeleted:(NSNumber *) valIsDeleted;	

-(BOOL) ProcessPkStatement :(NSNumber *) keyCountryID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyCountryID query:(NSString *) query;

-(id<ICountryData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<ICountryData>) FindByCountryID:(NSNumber *) fieldValue;
-(id<ICountryData>) FindByName:(NSString *) fieldValue; 
-(id<ICountryData>) FindByCountryCode:(NSString *) fieldValue; 
-(id<ICountryData>) FindByStd:(NSString *) fieldValue; 
-(id<ICountryData>) FindByGmt:(NSDate *) fieldValue;  
-(id<ICountryData>) FindByCreditRate:(NSNumber *) fieldValue;
-(id<ICountryData>) FindByIsDeleted:(NSNumber *) fieldValue;
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<ICountryData>) FindObject :(NSNumber *) keyCountryID ;
        
-(id<ICountryData>) Find:(DataHandler *) dataHandler;
        
-(id<ICountryData>) FindAllObjects;

-(id<ICountryData>) FindAllObjects:(NSString *) orderByField;

-(id<ICountryData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<ICountryData>) CreateCountry:(id<IDataReader>) reader;
		
-(id<ICountryData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<ICountryData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end