// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in SampleQueryElement.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "ISampleQueryElementData.h"
#import "ISampleQueryElementFactoryBase.h"

//package OnePoint.POM.Model; 
  

/// <summary>
/// Creates and finds SampleQueryElement objects
/// </summary>



@interface  SampleQueryElementFactoryBase : DataObjectFactory<ISampleQueryElementData,ISampleQueryElementFactoryBase>
{
}

+(NSString*)  FIELD_NAME_SAMPLEQUERYELEMENTID;
+(NSString*)  FIELD_NAME_ANDOR;
+(NSString*)  FIELD_NAME_FIELDNAME;
+(NSString*)  FIELD_NAME_CONDITIONID;
+(NSString*)  FIELD_NAME_FIELDVALUE;
+(NSString*)  FIELD_NAME_SAMPLEID;
+(NSString*)  FIELD_NAME_ISBASIC;
+(NSString*)  FIELD_NAME_TYPE;
+(NSString*)  FIELD_NAME_VARIABLEID;
+(NSString*)  FIELD_NAME_PANELID;
+(NSString*)  FIELD_NAME_ISDELETED;
+(NSString*)  FIELD_NAME_INUSE;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*)  FIELD_NAME_LASTUPDATEDDATE;
+(NSString*)  FIELD_NAME_QUOTAEXPRESSIONID;
+(NSString*) PARAMETER_NAME_SAMPLEQUERYELEMENTID;
+(NSString*) PARAMETER_NAME_ANDOR;
+(NSString*) PARAMETER_NAME_FIELDNAME;
+(NSString*) PARAMETER_NAME_CONDITIONID;
+(NSString*) PARAMETER_NAME_FIELDVALUE;
+(NSString*) PARAMETER_NAME_SAMPLEID;
+(NSString*) PARAMETER_NAME_ISBASIC;
+(NSString*) PARAMETER_NAME_TYPE;
+(NSString*) PARAMETER_NAME_VARIABLEID;
+(NSString*) PARAMETER_NAME_PANELID;
+(NSString*) PARAMETER_NAME_ISDELETED;
+(NSString*) PARAMETER_NAME_INUSE;
+(NSString*) PARAMETER_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_LASTUPDATEDDATE;
+(NSString*) PARAMETER_NAME_QUOTAEXPRESSIONID;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keySampleQueryElementID ;
//-(BOOL) DeleteByPk:(NSNumber *) keySampleQueryElementID;
// Define input parameters once only so they can be reused by other methods
-(void) AddSampleQueryElementIDParameter:(DataHandler *) dataHandler valSampleQueryElementID:(NSNumber *) valSampleQueryElementID;	

-(void) AddAndOrParameter:(DataHandler *) dataHandler valAndOr:(NSString *) valAndOr;	

-(void) AddFieldNameParameter:(DataHandler *) dataHandler valFieldName:(NSString *) valFieldName;	

-(void) AddConditionIDParameter:(DataHandler *) dataHandler valConditionID:(NSNumber *) valConditionID;	

-(void) AddFieldValueParameter:(DataHandler *) dataHandler valFieldValue:(NSString *) valFieldValue;	

-(void) AddSampleIDParameter:(DataHandler *) dataHandler valSampleID:(NSNumber *) valSampleID;	

-(void) AddIsBasicParameter:(DataHandler *) dataHandler valIsBasic:(NSNumber *) valIsBasic;	

-(void) AddTypeParameter:(DataHandler *) dataHandler valType:(NSNumber *) valType;	

-(void) AddVariableIDParameter:(DataHandler *) dataHandler valVariableID:(NSNumber *) valVariableID;	

-(void) AddVariableIDNullParameter:(DataHandler *) dataHandler; 
-(void) AddPanelIDParameter:(DataHandler *) dataHandler valPanelID:(NSNumber *) valPanelID;	

-(void) AddIsDeletedParameter:(DataHandler *) dataHandler valIsDeleted:(NSNumber *) valIsDeleted;	

-(void) AddInUseParameter:(DataHandler *) dataHandler valInUse:(NSNumber *) valInUse;	

-(void) AddInUseNullParameter:(DataHandler *) dataHandler; 
-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(void) AddLastUpdatedDateParameter:(DataHandler *) dataHandler valLastUpdatedDate: (NSDate *) valLastUpdatedDate;	

-(void) AddQuotaExpressionIDParameter:(DataHandler *) dataHandler valQuotaExpressionID:(NSNumber *) valQuotaExpressionID;	

-(void) AddQuotaExpressionIDNullParameter:(DataHandler *) dataHandler; 
-(BOOL) ProcessPkStatement :(NSNumber *) keySampleQueryElementID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keySampleQueryElementID query:(NSString *) query;

-(id<ISampleQueryElementData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<ISampleQueryElementData>) FindBySampleQueryElementID:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByAndOr:(NSString *) fieldValue; 
-(id<ISampleQueryElementData>) FindByFieldName:(NSString *) fieldValue; 
-(id<ISampleQueryElementData>) FindByConditionID:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByFieldValue:(NSString *) fieldValue; 
-(id<ISampleQueryElementData>) FindBySampleID:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByIsBasic:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByType:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByVariableID:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByPanelID:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByIsDeleted:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByInUse:(NSNumber *) fieldValue;
-(id<ISampleQueryElementData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(id<ISampleQueryElementData>) FindByLastUpdatedDate:(NSDate *) fieldValue;  
-(id<ISampleQueryElementData>) FindByQuotaExpressionID:(NSNumber *) fieldValue;
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<ISampleQueryElementData>) FindObject :(NSNumber *) keySampleQueryElementID ;
        
-(id<ISampleQueryElementData>) Find:(DataHandler *) dataHandler;
        
-(id<ISampleQueryElementData>) FindAllObjects;

-(id<ISampleQueryElementData>) FindAllObjects:(NSString *) orderByField;

-(id<ISampleQueryElementData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<ISampleQueryElementData>) CreateSampleQueryElement:(id<IDataReader>) reader;
		
-(id<ISampleQueryElementData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<ISampleQueryElementData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end