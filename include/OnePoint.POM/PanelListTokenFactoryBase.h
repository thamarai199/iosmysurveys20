// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in PanelListToken.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "IPanelListTokenData.h"
#import "IPanelListTokenFactoryBase.h"

//package OnePoint.POM.Model; 
  

/// <summary>
/// Creates and finds PanelListToken objects
/// </summary>



@interface  PanelListTokenFactoryBase : DataObjectFactory<IPanelListTokenData,IPanelListTokenFactoryBase>
{
}

+(NSString*)  FIELD_NAME_PANELLISTTOKENID;
+(NSString*)  FIELD_NAME_PANELLISTID;
+(NSString*)  FIELD_NAME_TOKENTEXT;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*)  FIELD_NAME_LASTUPDATEDDATE;
+(NSString*) PARAMETER_NAME_PANELLISTTOKENID;
+(NSString*) PARAMETER_NAME_PANELLISTID;
+(NSString*) PARAMETER_NAME_TOKENTEXT;
+(NSString*) PARAMETER_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_LASTUPDATEDDATE;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyPanellistTokenID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyPanellistTokenID;
// Define input parameters once only so they can be reused by other methods
-(void) AddPanellistTokenIDParameter:(DataHandler *) dataHandler valPanellistTokenID:(NSNumber *) valPanellistTokenID;	

-(void) AddPanellistIDParameter:(DataHandler *) dataHandler valPanellistID:(NSNumber *) valPanellistID;	

-(void) AddTokenTextParameter:(DataHandler *) dataHandler valTokenText:(NSString *) valTokenText;	

-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(void) AddLastUpdatedDateParameter:(DataHandler *) dataHandler valLastUpdatedDate: (NSDate *) valLastUpdatedDate;	

-(BOOL) ProcessPkStatement :(NSNumber *) keyPanellistTokenID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyPanellistTokenID query:(NSString *) query;

-(id<IPanelListTokenData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<IPanelListTokenData>) FindByPanellistTokenID:(NSNumber *) fieldValue;
-(id<IPanelListTokenData>) FindByPanellistID:(NSNumber *) fieldValue;
-(id<IPanelListTokenData>) FindByTokenText:(NSString *) fieldValue; 
-(id<IPanelListTokenData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(id<IPanelListTokenData>) FindByLastUpdatedDate:(NSDate *) fieldValue;  
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<IPanelListTokenData>) FindObject :(NSNumber *) keyPanellistTokenID ;
        
-(id<IPanelListTokenData>) Find:(DataHandler *) dataHandler;
        
-(id<IPanelListTokenData>) FindAllObjects;

-(id<IPanelListTokenData>) FindAllObjects:(NSString *) orderByField;

-(id<IPanelListTokenData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<IPanelListTokenData>) CreatePanelListToken:(id<IDataReader>) reader;
		
-(id<IPanelListTokenData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<IPanelListTokenData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end