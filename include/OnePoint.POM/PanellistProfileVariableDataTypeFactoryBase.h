// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in PanellistProfileVariableDataType.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "IPanellistProfileVariableDataTypeData.h"
#import "IPanellistProfileVariableDataTypeFactoryBase.h"

//package OnePoint.POM.Model; 
  

/// <summary>
/// Creates and finds PanellistProfileVariableDataType objects
/// </summary>



@interface  PanellistProfileVariableDataTypeFactoryBase : DataObjectFactory<IPanellistProfileVariableDataTypeData,IPanellistProfileVariableDataTypeFactoryBase>
{
}

+(NSString*)  FIELD_NAME_TYPEID;
+(NSString*)  FIELD_NAME_TYPE;
+(NSString*)  FIELD_NAME_NAME;
+(NSString*)  FIELD_NAME_DESCRIPTION;
+(NSString*)  FIELD_NAME_ISDELETED;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_TYPEID;
+(NSString*) PARAMETER_NAME_TYPE;
+(NSString*) PARAMETER_NAME_NAME;
+(NSString*) PARAMETER_NAME_DESCRIPTION;
+(NSString*) PARAMETER_NAME_ISDELETED;
+(NSString*) PARAMETER_NAME_CREATEDDATE;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyTypeID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyTypeID;
// Define input parameters once only so they can be reused by other methods
-(void) AddTypeIDParameter:(DataHandler *) dataHandler valTypeID:(NSNumber *) valTypeID;	

-(void) AddTypeParameter:(DataHandler *) dataHandler valType:(NSNumber *) valType;	

-(void) AddNameParameter:(DataHandler *) dataHandler valName:(NSString *) valName;	

-(void) AddDescriptionParameter:(DataHandler *) dataHandler valDescription:(NSString *) valDescription;	

-(void) AddIsDeletedParameter:(DataHandler *) dataHandler valIsDeleted:(NSNumber *) valIsDeleted;	

-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(BOOL) ProcessPkStatement :(NSNumber *) keyTypeID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyTypeID query:(NSString *) query;

-(id<IPanellistProfileVariableDataTypeData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<IPanellistProfileVariableDataTypeData>) FindByTypeID:(NSNumber *) fieldValue;
-(id<IPanellistProfileVariableDataTypeData>) FindByType:(NSNumber *) fieldValue;
-(id<IPanellistProfileVariableDataTypeData>) FindByName:(NSString *) fieldValue; 
-(id<IPanellistProfileVariableDataTypeData>) FindByDescription:(NSString *) fieldValue; 
-(id<IPanellistProfileVariableDataTypeData>) FindByIsDeleted:(NSNumber *) fieldValue;
-(id<IPanellistProfileVariableDataTypeData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<IPanellistProfileVariableDataTypeData>) FindObject :(NSNumber *) keyTypeID ;
        
-(id<IPanellistProfileVariableDataTypeData>) Find:(DataHandler *) dataHandler;
        
-(id<IPanellistProfileVariableDataTypeData>) FindAllObjects;

-(id<IPanellistProfileVariableDataTypeData>) FindAllObjects:(NSString *) orderByField;

-(id<IPanellistProfileVariableDataTypeData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<IPanellistProfileVariableDataTypeData>) CreatePanellistProfileVariableDataType:(id<IDataReader>) reader;
		
-(id<IPanellistProfileVariableDataTypeData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<IPanellistProfileVariableDataTypeData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end