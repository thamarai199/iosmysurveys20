//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/chinthan/Framework/Logger/ConvertCode/OnePoint/Runtime/Expressions/Helpers/SymbolManagement/SymbolBuilder.java
//
//  Created by chinthan on 1/6/14.
//

#ifndef _SymbolBuilder_H_
#define _SymbolBuilder_H_

@class SymbolTable;
@protocol ISymbol;
#import "Interview.h"
#import "Library.h"


@interface SymbolBuilder : NSObject {
}

+ (SymbolTable *)__Global;
+ (void)set__Global:(SymbolTable *)__Global;
+ (SymbolTable *)__Constants;
+ (void)set__Constants:(SymbolTable *)__Constants;
+ (id<ISymbol>)__MetaData;
+ (void)set__MetaData:(id<ISymbol>)__MetaData;
+ (id<ISymbol>)__Library;
+ (void)set__Library:(id<ISymbol>)__Library;
+ (Interview *)__Interview;
+ (void)set__Interview:(Interview *)__Interview;
+ (SymbolTable *)getGlobal;
+ (void)setGlobalWithSymbolTable:(SymbolTable *)value;
+ (SymbolTable *)getConstants;
+ (void)setConstantsWithSymbolTable:(SymbolTable *)value;
+ (id<ISymbol>)getMetaData;
+ (void)setMetaDataWithISymbol:(id<ISymbol>)value;
+ (id<ISymbol>)getLibrary;
+ (void)setLibraryWithISymbol:(id<ISymbol>)value;
+ (Library *)getLibraryFunctions;
+ (void)setLibraryFunctions:(Library *)value;
+ (id<ISymbol>)getClassWithNSString:(NSString *)name withNSString:(NSString *)nameSpace withBoolean:(BOOL)isExternal withBoolean:(BOOL)isPublic withBoolean:(BOOL)isStatic withBoolean:(BOOL)isBaseType;
+ (id<ISymbol>)getClassWithNSString:(NSString *)name withNSString:(NSString *)nameSpace;
+ (id<ISymbol>)getClassWithNSString:(NSString *)name withNSString:(NSString *)nameSpace withBoolean:(BOOL)isExternal;
+ (id<ISymbol>)getClassWithNSString:(NSString *)name withNSString:(NSString *)nameSpace withBoolean:(BOOL)isExternal withBoolean:(BOOL)isPublic;
+ (id<ISymbol>)getClassWithNSString:(NSString *)name withNSString:(NSString *)nameSpace withBoolean:(BOOL)isExternal withBoolean:(BOOL)isPublic withBoolean:(BOOL)isStatic;
+ (id<ISymbol>)constantWithNSString:(NSString *)name withNSString:(NSString *)descriptor withId:(id)constantValue;
+ (id<ISymbol>)fieldWithNSString:(NSString *)name withNSString:(NSString *)accessType withNSString:(NSString *)descriptor withId:(id)value withBoolean:(BOOL)isStatic withBoolean:(BOOL)isPublic;
+ (id<ISymbol>)variantWithNSString:(NSString *)name;
+ (id<ISymbol>)methodWithNSString:(NSString *)name withNSString:(NSString *)descriptor withBoolean:(BOOL)touched withBoolean:(BOOL)isPublic;
+ (id<ISymbol>)referenceWithNSString:(NSString *)name withNSString:(NSString *)descriptor;
+ (id<ISymbol>)globalReferenceWithNSString:(NSString *)name withNSString:(NSString *)descriptor;
+ (id<ISymbol>)lookupWithNSString:(NSString *)name;
+ (id<ISymbol>)globalLookupWithNSString:(NSString *)name;
+ (id<ISymbol>)methodWithNSString:(NSString *)name;
+ (id<ISymbol>)stringConstantWithNSString:(NSString *)name withNSString:(NSString *)constantValue;
+ (id<ISymbol>)integerConstantWithNSString:(NSString *)name withInt:(int)constantValue;
+ (id<ISymbol>)integerWithNSString:(NSString *)name;
+ (id<ISymbol>)booleanConstantWithNSString:(NSString *)name withBoolean:(BOOL)constantValue;
+ (id<ISymbol>)floatConstantWithNSString:(NSString *)name withFloat:(float)constantValue;
+ (id<ISymbol>)toVoid;
+ (id<ISymbol>)labelWithNSString:(NSString *)name;
+ (id<ISymbol>)dummy;
- (id)init;
@end

#endif // _SymbolBuilder_H_
