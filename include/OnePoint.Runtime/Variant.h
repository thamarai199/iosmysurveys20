//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/chinthan/Framework/Logger/ConvertCode/OnePoint/Runtime/Common/BasicTypes/Variant.java
//
//  Created by chinthan on 1/15/14.
//


#import "Operator.h"
#import "ScriptReader.h"
#import <Foundation/Foundation.h>
#define Variant_CvBoolean 2
#define Variant_CvByte 4
#define Variant_CvChar 3
#define Variant_CvCategorical 21
#define Variant_CvDatetime 16
#define Variant_CvDecimal 17
#define Variant_CvDouble 13
#define Variant_CvEmpty 0
#define Variant_CvFloat 12
#define Variant_CvInt 8
#define Variant_CvIOM 22
#define Variant_CvLong 10
#define Variant_CvMissing 20
#define Variant_CvNull 18
#define Variant_CvObject 19
#define Variant_CvPtr 15
#define Variant_CvQuestion 23
#define Variant_CvShort 6
#define Variant_CvString 14
#define Variant_CvVoid 1

@interface Variant : NSObject {
    int flags_;
    id __Objref_;
    long long __Data1_;
    long long __Data2_;
}

+ (int)CvEmpty;
+ (int)CvVoid;
+ (int)CvBoolean;
+ (int)CvChar;
+ (int)CvByte;
+ (int)CvShort;
+ (int)CvInt;
+ (int)CvLong;
+ (int)CvFloat;
+ (int)CvDouble;
+ (int)CvString;
+ (int)CvPtr;
+ (int)CvDatetime;
+ (int)CvObject;
+ (int)CvDecimal;
+ (int)CvMissing;
+ (int)CvNull;
+ (NSMutableArray *)ClassTypes;
+ (Variant *)Empty;
+ (Variant *)Missing;
- (id)init;
- (id)initWithBoolean:(BOOL)val;
- (id)initWithByte:(char)val;
- (id)initWithShort:(short int)val;
- (id)initWithChar:(unichar)val;
- (id)initWithInt:(int)val;
- (id)initWithLong:(long)val;
- (id)initWithFloat:(float)val;
- (id)initWithDouble:(double)val;
- (id)initWithNSDate:(NSDate *)val;
- (id)initWithId:(id)obj;
- (id)initWithInt:(int)flags
           withId:(id)value
          withInt:(int)data1
          withInt:(int)data2;
- (id)getObjref;
- (void)setObjrefWithId:(id)value;
- (long long)getData1;
- (void)setData1WithInt:(long long)value;
- (long long)getData2;
- (void)setData2WithInt:(long long)value;
- (int)getCvType;
- (void)setCvTypeWithInt:(int)value;
+ (Variant *)nulls;
+ (Variant *)operateWithOperatorEnum:(Operator)oper
                         withVariant:(Variant *)left;
+ (Variant *)operateWithOperatorEnum:(Operator)oper
                         withVariant:(Variant *)left
                         withVariant:(Variant *)right;
+ (Variant*)convertObjectToVariantWithId:(id)o
                         withVariant:(Variant *)v;
+ (id)convertVariantToObjectWithVariant:(Variant *)v;
+ (Variant *)castVariantWithId:(id)objectValue
                       withInt:(int)vt
                   withVariant:(Variant *)v;
- (Variant *)clone;
- (id)toObject;
- (long long)toNumber;
- (NSString *)getDescription;
- (long long)getI8FromVar;
+(Variant*)fromStream:(ScriptReader*)stream;
-(NSData*)toStream;
-(BOOL)getIsNull;
+(BOOL)getIsBasic:(id)obj;
-(id)getMaxValue;
-(id)getMinValue;
@end


