// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in GeofenceSurvey.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "IGeofenceSurveyData.h"
#import "IGeofenceSurveyFactoryBase.h"

//package OnePoint.PROM.Model; 
  

/// <summary>
/// Creates and finds GeofenceSurvey objects
/// </summary>



@interface  GeofenceSurveyFactoryBase : DataObjectFactory<IGeofenceSurveyData,IGeofenceSurveyFactoryBase>
{
}

+(NSString*)  FIELD_NAME_GEOFENCEID;
+(NSString*)  FIELD_NAME_SURVEYNAME;
+(NSString*)  FIELD_NAME_SURVEYID;
+(NSString*)  FIELD_NAME_SURVEYREFERENCE;
+(NSString*)  FIELD_NAME_ADDRESS;
+(NSString*)  FIELD_NAME_ADDRESSID;
+(NSString*)  FIELD_NAME_LATITUDE;
+(NSString*)  FIELD_NAME_LONGITUDE;
+(NSString*)  FIELD_NAME_GEOCODE;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*)  FIELD_NAME_LASTUPDATEDDATE;
+(NSString*)  FIELD_NAME_RANGE;
+(NSString*)  FIELD_NAME_DISTANCE;
+(NSString*)  FIELD_NAME_ISENTERED;
+(NSString*) PARAMETER_NAME_GEOFENCEID;
+(NSString*) PARAMETER_NAME_SURVEYNAME;
+(NSString*) PARAMETER_NAME_SURVEYID;
+(NSString*) PARAMETER_NAME_SURVEYREFERENCE;
+(NSString*) PARAMETER_NAME_ADDRESS;
+(NSString*) PARAMETER_NAME_ADDRESSID;
+(NSString*) PARAMETER_NAME_LATITUDE;
+(NSString*) PARAMETER_NAME_LONGITUDE;
+(NSString*) PARAMETER_NAME_GEOCODE;
+(NSString*) PARAMETER_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_LASTUPDATEDDATE;
+(NSString*) PARAMETER_NAME_RANGE;
+(NSString*) PARAMETER_NAME_DISTANCE;
+(NSString*) PARAMETER_NAME_ISENTERED;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyGeofenceID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyGeofenceID;
// Define input parameters once only so they can be reused by other methods
-(void) AddGeofenceIDParameter:(DataHandler *) dataHandler valGeofenceID:(NSNumber *) valGeofenceID;	

-(void) AddSurveyNameParameter:(DataHandler *) dataHandler valSurveyName:(NSString *) valSurveyName;	

-(void) AddSurveyIDParameter:(DataHandler *) dataHandler valSurveyID:(NSNumber *) valSurveyID;	

-(void) AddSurveyReferenceParameter:(DataHandler *) dataHandler valSurveyReference:(NSString *) valSurveyReference;	

-(void) AddAddressParameter:(DataHandler *) dataHandler valAddress:(NSString *) valAddress;	

-(void) AddAddressIDParameter:(DataHandler *) dataHandler valAddressID:(NSNumber *) valAddressID;	

-(void) AddLatitudeParameter:(DataHandler *) dataHandler valLatitude:(NSNumber *) valLatitude;	

-(void) AddLongitudeParameter:(DataHandler *) dataHandler valLongitude:(NSNumber *) valLongitude;	

-(void) AddGeoCodeParameter:(DataHandler *) dataHandler valGeoCode:(NSString *) valGeoCode;	

-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(void) AddLastUpdatedDateParameter:(DataHandler *) dataHandler valLastUpdatedDate: (NSDate *) valLastUpdatedDate;	

-(void) AddRangeParameter:(DataHandler *) dataHandler valRange:(NSNumber *) valRange;	

-(void) AddDistanceParameter:(DataHandler *) dataHandler valDistance:(NSNumber *) valDistance;	

-(void) AddIsEnteredParameter:(DataHandler *) dataHandler valIsEntered:(NSNumber*) valIsEntered;

-(BOOL) ProcessPkStatement :(NSNumber *) keyGeofenceID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyGeofenceID query:(NSString *) query;

-(id<IGeofenceSurveyData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<IGeofenceSurveyData>) FindByGeofenceID:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindBySurveyName:(NSString *) fieldValue; 
-(id<IGeofenceSurveyData>) FindBySurveyID:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindBySurveyReference:(NSString *) fieldValue; 
-(id<IGeofenceSurveyData>) FindByAddress:(NSString *) fieldValue; 
-(id<IGeofenceSurveyData>) FindByAddressID:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindByLatitude:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindByLongitude:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindByGeoCode:(NSString *) fieldValue; 
-(id<IGeofenceSurveyData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(id<IGeofenceSurveyData>) FindByLastUpdatedDate:(NSDate *) fieldValue;  
-(id<IGeofenceSurveyData>) FindByRange:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindByDistance:(NSNumber *) fieldValue;
-(id<IGeofenceSurveyData>) FindByIsEntered:(NSNumber *) fieldValue;   
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<IGeofenceSurveyData>) FindObject :(NSNumber *) keyGeofenceID ;
        
-(id<IGeofenceSurveyData>) Find:(DataHandler *) dataHandler;
        
-(id<IGeofenceSurveyData>) FindAllObjects;

-(id<IGeofenceSurveyData>) FindAllObjects:(NSString *) orderByField;

-(id<IGeofenceSurveyData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<IGeofenceSurveyData>) CreateGeofenceSurvey:(id<IDataReader>) reader;
		
-(id<IGeofenceSurveyData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<IGeofenceSurveyData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end
