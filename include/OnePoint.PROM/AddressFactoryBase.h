// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in Address.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "IAddressData.h"
#import "IAddressFactoryBase.h"

//package OnePoint.PROM.Model; 
  

/// <summary>
/// Creates and finds Address objects
/// </summary>



@interface  AddressFactoryBase : DataObjectFactory<IAddressData,IAddressFactoryBase>
{
}

+(NSString*)  FIELD_NAME_ADDRESSID;
+(NSString*)  FIELD_NAME_ADDRESSLISTID;
+(NSString*)  FIELD_NAME_SURVEYID;
+(NSString*)  FIELD_NAME_ADDRESS;
+(NSString*)  FIELD_NAME_LATITUDE;
+(NSString*)  FIELD_NAME_LONGITUDE;
+(NSString*)  FIELD_NAME_GEOCODE;
+(NSString*)  FIELD_NAME_STATUS;
+(NSString*)  FIELD_NAME_ISDELETED;
+(NSString*)  FIELD_NAME_USERDEF1;
+(NSString*)  FIELD_NAME_USERDEF2;
+(NSString*)  FIELD_NAME_USERDEF3;
+(NSString*)  FIELD_NAME_USERDEF4;
+(NSString*)  FIELD_NAME_USERDEF5;
+(NSString*)  FIELD_NAME_USERDEF6;
+(NSString*)  FIELD_NAME_USERDEF7;
+(NSString*)  FIELD_NAME_USERDEF8;
+(NSString*)  FIELD_NAME_USERDEF9;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*)  FIELD_NAME_LASTUPDATEDDATE;
+(NSString*) PARAMETER_NAME_ADDRESSID;
+(NSString*) PARAMETER_NAME_ADDRESSLISTID;
+(NSString*) PARAMETER_NAME_SURVEYID;
+(NSString*) PARAMETER_NAME_ADDRESS;
+(NSString*) PARAMETER_NAME_LATITUDE;
+(NSString*) PARAMETER_NAME_LONGITUDE;
+(NSString*) PARAMETER_NAME_GEOCODE;
+(NSString*) PARAMETER_NAME_STATUS;
+(NSString*) PARAMETER_NAME_ISDELETED;
+(NSString*) PARAMETER_NAME_USERDEF1;
+(NSString*) PARAMETER_NAME_USERDEF2;
+(NSString*) PARAMETER_NAME_USERDEF3;
+(NSString*) PARAMETER_NAME_USERDEF4;
+(NSString*) PARAMETER_NAME_USERDEF5;
+(NSString*) PARAMETER_NAME_USERDEF6;
+(NSString*) PARAMETER_NAME_USERDEF7;
+(NSString*) PARAMETER_NAME_USERDEF8;
+(NSString*) PARAMETER_NAME_USERDEF9;
+(NSString*) PARAMETER_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_LASTUPDATEDDATE;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyAddressID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyAddressID;
// Define input parameters once only so they can be reused by other methods
-(void) AddAddressIDParameter:(DataHandler *) dataHandler valAddressID:(NSNumber *) valAddressID;	

-(void) AddAddressListIDParameter:(DataHandler *) dataHandler valAddressListID:(NSNumber *) valAddressListID;	

-(void) AddSurveyIDParameter:(DataHandler *) dataHandler valSurveyID:(NSNumber *) valSurveyID;	

-(void) AddAddressParameter:(DataHandler *) dataHandler valAddress:(NSString *) valAddress;	

-(void) AddLatitudeParameter:(DataHandler *) dataHandler valLatitude:(NSNumber *) valLatitude;	

-(void) AddLongitudeParameter:(DataHandler *) dataHandler valLongitude:(NSNumber *) valLongitude;	

-(void) AddGeoCodeParameter:(DataHandler *) dataHandler valGeoCode:(NSString *) valGeoCode;	

-(void) AddStatusParameter:(DataHandler *) dataHandler valStatus:(NSString *) valStatus;	

-(void) AddIsDeletedParameter:(DataHandler *) dataHandler valIsDeleted:(NSNumber *) valIsDeleted;	

-(void) AddUserDef1Parameter:(DataHandler *) dataHandler valUserDef1:(NSString *) valUserDef1;	

-(void) AddUserDef2Parameter:(DataHandler *) dataHandler valUserDef2:(NSString *) valUserDef2;	

-(void) AddUserDef3Parameter:(DataHandler *) dataHandler valUserDef3:(NSString *) valUserDef3;	

-(void) AddUserDef4Parameter:(DataHandler *) dataHandler valUserDef4:(NSString *) valUserDef4;	

-(void) AddUserDef5Parameter:(DataHandler *) dataHandler valUserDef5:(NSString *) valUserDef5;	

-(void) AddUserDef6Parameter:(DataHandler *) dataHandler valUserDef6:(NSString *) valUserDef6;	

-(void) AddUserDef7Parameter:(DataHandler *) dataHandler valUserDef7:(NSString *) valUserDef7;	

-(void) AddUserDef8Parameter:(DataHandler *) dataHandler valUserDef8:(NSString *) valUserDef8;	

-(void) AddUserDef9Parameter:(DataHandler *) dataHandler valUserDef9:(NSString *) valUserDef9;	

-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(void) AddLastUpdatedDateParameter:(DataHandler *) dataHandler valLastUpdatedDate: (NSDate *) valLastUpdatedDate;	

-(BOOL) ProcessPkStatement :(NSNumber *) keyAddressID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyAddressID query:(NSString *) query;

-(id<IAddressData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<IAddressData>) FindByAddressID:(NSNumber *) fieldValue;
-(id<IAddressData>) FindByAddressListID:(NSNumber *) fieldValue;
-(id<IAddressData>) FindBySurveyID:(NSNumber *) fieldValue;
-(id<IAddressData>) FindByAddress:(NSString *) fieldValue; 
-(id<IAddressData>) FindByLatitude:(NSNumber *) fieldValue;
-(id<IAddressData>) FindByLongitude:(NSNumber *) fieldValue;
-(id<IAddressData>) FindByGeoCode:(NSString *) fieldValue; 
-(id<IAddressData>) FindByStatus:(NSString *) fieldValue; 
-(id<IAddressData>) FindByIsDeleted:(NSNumber *) fieldValue;
-(id<IAddressData>) FindByUserDef1:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef2:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef3:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef4:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef5:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef6:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef7:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef8:(NSString *) fieldValue; 
-(id<IAddressData>) FindByUserDef9:(NSString *) fieldValue; 
-(id<IAddressData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(id<IAddressData>) FindByLastUpdatedDate:(NSDate *) fieldValue;  
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<IAddressData>) FindObject :(NSNumber *) keyAddressID ;
        
-(id<IAddressData>) Find:(DataHandler *) dataHandler;
        
-(id<IAddressData>) FindAllObjects;

-(id<IAddressData>) FindAllObjects:(NSString *) orderByField;

-(id<IAddressData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<IAddressData>) CreateAddress:(id<IDataReader>) reader;
		
-(id<IAddressData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<IAddressData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end