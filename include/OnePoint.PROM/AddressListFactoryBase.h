// --------------------------------------------------------------------------------------------------------------------
// <copyright file="model.cs" company="OnePoint Global">
//   Copyright (c) 2012 OnePoint Global Ltd. All rights reserved.
// </copyright>
// <summary>
//   This file was autogenerated and you should not edit it. It will be 
//   regenerated whenever the schema changes.
//   All changes should be made in AddressList.cs and the mode.xml. 
// </summary>
// --------------------------------------------------------------------------------------------------------------------


#import <Foundation/Foundation.h>
#import <OnePointFramework/DataObjectFactory.h>
#import "IAddressListData.h"
#import "IAddressListFactoryBase.h"

//package OnePoint.PROM.Model; 
  

/// <summary>
/// Creates and finds AddressList objects
/// </summary>



@interface  AddressListFactoryBase : DataObjectFactory<IAddressListData,IAddressListFactoryBase>
{
}

+(NSString*)  FIELD_NAME_ADDRESSLISTID;
+(NSString*)  FIELD_NAME_DESCRIPTION;
+(NSString*)  FIELD_NAME_NAME;
+(NSString*)  FIELD_NAME_USERID;
+(NSString*)  FIELD_NAME_CREATEDDATE;
+(NSString*)  FIELD_NAME_LASTUPDATEDDATE;
+(NSString*)  FIELD_NAME_ISDELETED;
+(NSString*) PARAMETER_NAME_ADDRESSLISTID;
+(NSString*) PARAMETER_NAME_DESCRIPTION;
+(NSString*) PARAMETER_NAME_NAME;
+(NSString*) PARAMETER_NAME_USERID;
+(NSString*) PARAMETER_NAME_CREATEDDATE;
+(NSString*) PARAMETER_NAME_LASTUPDATEDDATE;
+(NSString*) PARAMETER_NAME_ISDELETED;

/// <summary>
/// The Microsoft SQL statement to join one table to another and perform it.
/// </summary>
-(BOOL) DeleteByPk :(NSNumber *) keyAddressListID ;
//-(BOOL) DeleteByPk:(NSNumber *) keyAddressListID;
// Define input parameters once only so they can be reused by other methods
-(void) AddAddressListIDParameter:(DataHandler *) dataHandler valAddressListID:(NSNumber *) valAddressListID;	

-(void) AddDescriptionParameter:(DataHandler *) dataHandler valDescription:(NSString *) valDescription;	

-(void) AddNameParameter:(DataHandler *) dataHandler valName:(NSString *) valName;	

-(void) AddUserIDParameter:(DataHandler *) dataHandler valUserID:(NSNumber *) valUserID;	

-(void) AddCreatedDateParameter:(DataHandler *) dataHandler valCreatedDate: (NSDate *) valCreatedDate;	

-(void) AddLastUpdatedDateParameter:(DataHandler *) dataHandler valLastUpdatedDate: (NSDate *) valLastUpdatedDate;	

-(void) AddIsDeletedParameter:(DataHandler *) dataHandler valIsDeleted:(NSNumber *) valIsDeleted;	

-(BOOL) ProcessPkStatement :(NSNumber *) keyAddressListID   query:(NSString *) query;
//-(BOOL) ProcessPkStatement:(NSNumber *) keyAddressListID query:(NSString *) query;

-(id<IAddressListData>) Find:(NSString *) attributeName attributeValue:(id) attributeValue;

-(id<IAddressListData>) FindByAddressListID:(NSNumber *) fieldValue;
-(id<IAddressListData>) FindByDescription:(NSString *) fieldValue; 
-(id<IAddressListData>) FindByName:(NSString *) fieldValue; 
-(id<IAddressListData>) FindByUserID:(NSNumber *) fieldValue;
-(id<IAddressListData>) FindByCreatedDate:(NSDate *) fieldValue;  
-(id<IAddressListData>) FindByLastUpdatedDate:(NSDate *) fieldValue;  
-(id<IAddressListData>) FindByIsDeleted:(NSNumber *) fieldValue;
-(void) AppendSqlParameters:(DataHandler *) dataHandler dataObject:(DataObject *)dataObject mode:(DataMode *) mode;      
-(id<IAddressListData>) FindObject :(NSNumber *) keyAddressListID ;
        
-(id<IAddressListData>) Find:(DataHandler *) dataHandler;
        
-(id<IAddressListData>) FindAllObjects;

-(id<IAddressListData>) FindAllObjects:(NSString *) orderByField;

-(id<IAddressListData>) FindAllObjects:(NSString *) orderByField resultLimit:(int)resultLimit;	

-(id<IAddressListData>) CreateAddressList:(id<IDataReader>) reader;
		
-(id<IAddressListData>) createObjectFromDataReader:(id<IDataReader>) reader withPopulate:(BOOL)populateRelatedObject;

-(id<IAddressListData>) Build:(DataHandler *) currentDataHandler closeConnection:(BOOL)closeConnection;
       
@end